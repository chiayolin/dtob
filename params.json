{"name":"nbc","tagline":"The Number Base Converter.","body":"Number Base Converter\r\n=====================\r\n\r\n[![Build Status](https://travis-ci.org/chiayolin/nbc.svg?branch=master)](https://travis-ci.org/chiayolin/nbc)\r\n\r\nThe program, `nbc`, stands for Number Base Converter. `nbc` is an open source multi-platforms number base\r\nconverter written in C. You can use `nbc` to convert between binary, octal, decimal, and hexadecimal number. The\r\nprogram itself also provides a powerful interactive mode, as well as command line options.\r\n\r\nInstalling\r\n----------\r\n\r\n### Linux and Mac OS X\r\n1. Open your terminal\r\n2. `git clone http://github.com/chiayolin/nbc`\r\n3. `cd /path/to/nbc`\r\n5. `./install`\r\n\r\n### Windows\r\n1. Install Linux :-)\r\n2. `git clone http://github.com/chiayolin/nbc`\r\n3. `cd /path/to/nbc`\r\n5. `./install`\r\n\r\nUsage\r\n-----\r\n\r\n###Command Line\r\n`nbc [ -h | -m | -f ] [ -i <in base>] [ -o <out base>] [ <value> ]`\r\n\r\nHere is a list of available options: `-h` `-m` `-f` `-i` `-o`\r\n\r\n\r\n| Options     | Descriptions                                                   |\r\n| ----------- |----------------------------------------------------------------|\r\n| `-h`        | print program's information, such as license, author, and etc. |\r\n| `-f`        | force program enther the interactive mode.                     |\r\n| `-i <base>` | set input number base, \\<base\\> is required.                   |\r\n| `-o <base>` | set output number base, \\<base\\> is required.                  |\r\n| `<value>`   | input number value, this value can  not be empty.              |\r\n\r\nHere are four different in/out bases, and each base has three different form.\r\n\r\n`b`, `bin`, `binary`\r\n\r\n`o`, `oct`, `octal`\r\n\r\n`d`, `dec`, `decimal`\r\n\r\n`h`, `hex`, `hexadecimal`\r\n\r\nArguments `-i` and `-o` expect a number base after, and both arguments need to be used at the same time. However, \r\nthe `<value>` can not be empty. For example, when you want to convert a decimal number `332000` to a binary \r\nnumber, all you need is enter: `nbc -i dec -o bin 332000` into the termianl.\r\n\r\n`$ nbc -i dec -o bin 332000`\r\n\r\nOutput:\r\n\r\n`1010001000011100000`\r\n\r\nOkay, so now if we want to convert a hexadecimal number `bbb6ae` to a decimal number, then you will need to enter\r\n`nbc -i hex -o dec bbb6ae` into the termianl. However, like what it says above, every number base has three\r\ndifferent forms. Therefore you can either use `nbc -i h -o d bbb6ae`, `nbc -i hexadecimal -o decimal bbb6ae`, or\r\nany liget forms have shown above. This is what it might looks like on the terminal:\r\n\r\n`$ nbc -i hex -o dec bbb6ad`\r\n\r\nOutput:\r\n\r\n`12301997`\r\n\r\nA shortcut to do it:\r\n\r\n`$ nbc -i h -o d bbb6ad`\r\n\r\nOutput looks the same:\r\n\r\n`12301997`\r\n\r\nWell, there is a long way to do it as well:\r\n\r\n`nbc -i hexadecimal -o decimal bbb6ae`\r\n\r\nYou will get the same right output:\r\n\r\n`12301998`\r\n\r\n###Interactive Mode\r\n\r\nThe program provides a powerful interactive mode, which makes the number base conversion much easier. You can either\r\nenter by just runing the command `nbc`, or with the `-i` argument, `nbc -i`. \r\n\r\nWhen you get into the interactive mode, you will see a prompt like this:\r\n\r\n```\r\ntype `help` for help\r\n>\r\n````\r\n\r\nYou can use the command `help` for help.\r\n\r\n```\r\ntype `help` for help\r\n> help (Press RETURN)\r\n```\r\n\r\nThen you will get a list of available commands. However, every command is defined internally. Use `help COMMAND` to \r\nfind out more about the function `COMMAND`. For example, I want to know more about the command `set`, then I will \r\ntype:\r\n\r\n```\r\n> help set (Press RETURN)\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nset - set input/output base.\r\nusage: set [options [values]]\r\noptions:\r\n   -i, input   <base>\r\n   -o, output  <base>\r\nvalues:\r\n   bin, oct, dec, hex\r\n```\r\n\r\nNow you get the idea, try every command with `help` if you want.\r\n\r\nOkay, so now let's talk about the main function of `nbc`, convert number bases. Let's say you want to convert a \r\nhexdecimal number `bea` to binary. Then you would want use the `set` command to set input base to hexadecimal, and \r\noutput base to binary. Here is one way to do it:\r\n\r\n```\r\n> set input hex (Press RETURN)\r\n> set output bin (Press RETURN)\r\n```\r\n\r\nAnd of course, you can replace `input` with `-i` and `output` with `-o`:\r\n\r\n```\r\n> set -i hex (Press RETURN)\r\n> set -o bin (Press RETURN)\r\n```\r\n\r\n> Available number bases can be found on the above section. You can always use the `help` command to get more\r\n> information about every command. \r\n\r\nNow you are all set, so just simply enter:\r\n\r\n```\r\n> bea\r\n```\r\n\r\nOutput:\r\n\r\n```\r\n101111101010\r\n```\r\n\r\nDone!!! :tada:\r\n\r\nLicense\r\n-------\r\n\r\nCopyright (C) 2014  Chiayo Lin <chiayo.lin@gmail.com>\r\n\r\nThis program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public \r\nLicense as published by the Free Software Foundation, either version 3 of the License, or any later version.\r\n\r\nThis program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied \r\nwarranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more \r\ndetails.\r\nYou should have received a copy of the GNU General Public License along with this program. If not, see \r\n<http://www.gnu.org/licenses/>.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}